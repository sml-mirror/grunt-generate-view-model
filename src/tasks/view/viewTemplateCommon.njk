/*This file was automatically generated */
{% if class|is_not_empty %}
// tslint:disable
// @ts-nocheck
/* eslint-disable */

{% for import in imports %}
{%if import.forMapper ===false%}
import { {{import.type}} } from '{{import.path}}';
{%endif%}
{% endfor %}

{% if class|is_not_empty %}
{% if class.type === 'interface'%}
export interface {{class.name}} {

{% for field in class.fields %}
{% if  field.ignoredInView===false %}
  {{field.name}}{% if field.nullable === true %}?{%endif%}: {{field.type}}{% if field.isArray %}[]{% endif %};

{% endif %}
{% endfor %}
}
{% endif %}
{% if class.type === 'class' %}
{% for decorator in class.decorators %}
@{{decorator.name}}{% if decorator.arguments %}({% for item in decorator.arguments %}{% if item|is_string %} '{{item}}'{% else %}{{item}}{% endif %},{% endfor %}){% endif %} 
{% endfor %}
export class {{class.name}} {

{% for field in class.fields %}
{% if  field.ignoredInView===false %}
{% for decorator in field.decorators%}
      @{{decorator.name}}{% if decorator.arguments %}({% for item in decorator.arguments %}{% if item|is_string %} '{{item}}'{% else %}{{item}}{% endif %},{% endfor %}){% endif %}{{\n}}
{% endfor %}
      public {{field.name}}{% if field.nullable === true %}?{%endif%}: {{field.type}}{% if field.isArray %}[]{% endif %};

{% endif %}
{% endfor %}
}
{% endif %}
{% endif %}
{% endif %}